
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// © Гриценко Даниил 2021-2023г. | Модуль объекта
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

#Область ОбработчикиСобытий

// Обработчик события Перед записью.
//
Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	ПроверитьСвязкуСкладов(Отказ);
		
КонецПроцедуры

// Обработчик события Обработка проведения.
//
Процедура ОбработкаПроведения(Отказ, Режим)
	
	// Создание сгруппированного списка товаров.
	СписокТоваров = Товары.Выгрузить();
	СписокТоваров.Свернуть("Товар", "Количество");
	
	ЗаписатьДвиженияВОстаткиТоваров(СписокТоваров);
	
	Если Не ДополнительныеСвойства.Свойство("ПроведениеБезКонтроляОстатков") Тогда
		ПроверяемыеТовары = СписокТоваров.ВыгрузитьКолонку("Товар");
		ЗапасыСервер.ПроконтролироватьОстаткиТоваров(ПроверяемыеТовары, СкладОтправитель, МоментВремени(), Отказ);
	КонецЕсли;
		
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Проверяет отличие склада отправителя от склада получателя.
//
// Параметры:
//  Отказ - Булево 
//
Процедура ПроверитьСвязкуСкладов(Отказ)
	
	Если СкладОтправитель = СкладПолучатель Тогда
		Отказ = Истина;
		ТекстСообщения = НСтр("ru = 'Склад отправитель должен отличаться от склада получателя'");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
	КонецЕсли;	
	
КонецПроцедуры

// Записывает движения документа в регистр накопления Остатки товаров.
//
// Параметры:
//  СписокТоваров - ТаблицаЗначений - таблица товаров. 
//
Процедура ЗаписатьДвиженияВОстаткиТоваров(СписокТоваров)
	
	Движения.ОстаткиТоваров.Записывать 				= Истина;
	Движения.ОстаткиТоваров.БлокироватьДляИзменения = Истина;
	
	Для Каждого СтрокаТоваров Из СписокТоваров Цикл
		Товар 		= СтрокаТоваров.Товар;
		Количество 	= СтрокаТоваров.Количество;
		
		// Списание со склада отправителя.
		Движение 			= Движения.ОстаткиТоваров.ДобавитьРасход();
		Движение.Период 	= Дата;
		Движение.Склад 		= СкладОтправитель;
		Движение.Товар 		= Товар;
		Движение.Количество = Количество;
		
		// Поступление на склад получатель.
		Движение 			= Движения.ОстаткиТоваров.ДобавитьПриход();
		Движение.Период 	= Дата;
		Движение.Склад 		= СкладПолучатель;
		Движение.Товар 		= Товар;
		Движение.Количество = Количество;
	КонецЦикла;
	
	Движения.Записать();
	
КонецПроцедуры

#КонецОбласти
