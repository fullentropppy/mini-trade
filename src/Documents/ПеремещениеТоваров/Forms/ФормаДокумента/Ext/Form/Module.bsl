
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// © Гриценко Даниил 2021-2023г. | Модуль формы
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

#Область ОбработчикиСобытийФормы

// Обработчик события При чтении на сервере.
//
&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	ФормыКлиентСервер.УстановитьОбщиеДанныеИОформлениеДокумента(ЭтаФорма);
	
КонецПроцедуры

// Обработчик события При создании на сервере.
//
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Объект.Ссылка.Пустая() Тогда
		// Установка общих данных и оформления на форме документа при создании нового документа,
		// последующая установка выполняется при чтенении на сервере и после записи на сервере.
		ФормыКлиентСервер.УстановитьОбщиеДанныеИОформлениеДокумента(ЭтаФорма);
		
		// Заполнение реквизитов из настроек пользователя.
	    ОбъектыСервер.УстановитьОсновнойСклад(Объект.СкладОтправитель);
	КонецЕсли;
	
	ФормыКлиентСервер.УстановитьВидимостьКомандыПроведенияБезКонтроляОстатков(ЭтаФорма);
		
КонецПроцедуры

// Обработчик события Перед записью на сервере.
//
&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	ИмяСвойства = "ПроведениеБезКонтроляОстатков"; 
	Если ПараметрыЗаписи.Свойство(ИмяСвойства) Тогда
		// Установка дополнительного свойства для отключения контроля остатков при проведении.
		ТекущийОбъект.ДополнительныеСвойства.Вставить(ИмяСвойства);
	КонецЕсли;
	
КонецПроцедуры

// Обработчик события После записи на сервере.
//
&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)

	ФормыКлиентСервер.УстановитьОбщиеДанныеИОформлениеДокумента(ЭтаФорма);	
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

// Обработчик события Комментарий при изменении.
//
&НаКлиенте
Процедура КомментарийПриИзменении(Элемент)
	
	ФормыКлиентСервер.УстановитьКартинкуСтраницыКомментария(ЭтаФорма);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

// Команда Провести без контроля остатков;
//  Проводит документ без контроля свободных остатков товаров на складе списания.
//
&НаКлиенте
Процедура ПровестиБезКонтроляОстатков(Команда)
		
	ЗапасыКлиент.ПровестиДокументБезКонтроляОстатков(ЭтотОбъект);
	
КонецПроцедуры

// Команда Установить себя автором. 
//  Устанавливает текущего пользователя автором документа.
//
&НаКлиенте
Процедура УстановитьСебяАвтором(Команда)
	
	ФормыКлиент.УстановитьСебяАвторомДокумента(ЭтаФорма);
	
КонецПроцедуры

// Команда Подобрать товары (страница Товары);
//  Открывает форму подбора товаров в табличную часть Товары.
//
&НаКлиенте
Процедура ПодобратьТовары(Команда)
	
	ПараметрыФормы = Новый Структура();
	ПараметрыФормы.Вставить("РежимФормы", 					2);
	ПараметрыФормы.Вставить("Склад1", 						Объект.СкладОтправитель);
	ПараметрыФормы.Вставить("Склад1Заголовок", 				НСтр("ru = 'Склад списания'"));
	ПараметрыФормы.Вставить("ОстатокНаСкладе1Заголовок", 	НСтр("ru = 'Остаток на складе списания'"));	
	ПараметрыФормы.Вставить("Склад2", 						Объект.СкладПолучатель);
	ПараметрыФормы.Вставить("Склад2Заголовок", 				НСтр("ru = 'Склад поступления'"));
	ПараметрыФормы.Вставить("ОстатокНаСкладе2Заголовок", 	НСтр("ru = 'Остаток на складе поступления'"));

	ОткрытьФорму("Обработка.ПодборТоваров.Форма.Форма", ПараметрыФормы, ЭтаФорма);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Обрабатывает результат подбора товаров на стороне клиента.
//
// Параметры:
//  АдресВременногоХранилища - Строка - адрес таблицы значений с подобранными товарами. 
//
&НаКлиенте
Процедура ОбработатьПодборТоваров(АдресВременногоХранилища) Экспорт
	
	ОбработатьПодборТоваровНаСервере(АдресВременногоХранилища);
	Модифицированность = Истина;		
	
КонецПроцедуры

// Обрабатывает результат подбора товаров на стороне сервера.
//
// Параметры:
//  АдресВременногоХранилища - Строка - адрес таблицы значений с подобранными товарами. 
//
&НаСервере
Процедура ОбработатьПодборТоваровНаСервере(АдресВременногоХранилища)
	
	СписокВыбранныхТоваров = ПолучитьИзВременногоХранилища(АдресВременногоХранилища);	
	Для Каждого СтрокаСписка Из СписокВыбранныхТоваров Цикл
		НоваяСтрока = Объект.Товары.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаСписка);		
	КонецЦикла;
		
КонецПроцедуры

#КонецОбласти