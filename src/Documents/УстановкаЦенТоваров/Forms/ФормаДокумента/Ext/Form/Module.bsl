
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// © Гриценко Даниил 2021-2023г. | Модуль формы
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

#Область ОбработчикиСобытийФормы

// Обработчик события При чтении на сервере.
//
&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	ФормыКлиентСервер.УстановитьОбщиеДанныеИОформлениеДокумента(ЭтаФорма);	
	
КонецПроцедуры

// Обработчик события При создании на сервере.
//
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Объект.Ссылка.Пустая() Тогда
		// Установка общих данных и оформления на форме документа при создании нового документа,
		// последующая установка выполняется при чтенении на сервере и после записи на сервере.
		ФормыКлиентСервер.УстановитьОбщиеДанныеИОформлениеДокумента(ЭтаФорма);
	КонецЕсли;
	
КонецПроцедуры

// Обработчик события После записи на сервере.
//
&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	ФормыКлиентСервер.УстановитьДанныеСостоянияДокумента(ЭтаФорма);

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

// Обработчик события Вид цены при изменении.
//
&НаКлиенте
Процедура ВидЦеныПриИзменении(Элемент)
	
	ФормыКлиентСервер.УстановитьВидимостьВалюты(ЭтаФорма);
	
КонецПроцедуры

// Обработчик события Комментарий при изменении.
//
&НаКлиенте
Процедура КомментарийПриИзменении(Элемент)
	
	ФормыКлиентСервер.УстановитьКартинкуСтраницыКомментария(ЭтаФорма);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

// Команда Установить себя автором;
//  Устанавливает текущего пользователя автором документа.
//
&НаКлиенте
Процедура УстановитьСебяАвтором(Команда)
	
	ФормыКлиент.УстановитьСебяАвторомДокумента(ЭтаФорма);

КонецПроцедуры

// Команда Подобрать товары (страница Товары);
//  Открывает форму подбора товаров в табличную часть Товары.
//
&НаКлиенте
Процедура ПодобратьТовары(Команда)
	
	ПараметрыФормы = Новый Структура();
	ПараметрыФормы.Вставить("РежимФормы", 	5);
	ПараметрыФормы.Вставить("Период", 		Объект.Дата);
	ПараметрыФормы.Вставить("ВидЦены", 		Объект.ВидЦены);

	ОткрытьФорму("Обработка.ПодборТоваров.Форма.Форма", ПараметрыФормы, ЭтаФорма);
	
КонецПроцедуры

// Команда Изменить на процент (страница Товары, подменю Действия с ценами);
//  Изменяет цены в табличной части Товары на указанный процент. 
//
&НаКлиенте
Процедура ИзменитьЦеныНаПроцент(Команда)
	
	Если Не Объект.Товары.Количество() ИЛИ Не ПроверитьЗаполнение() Тогда
		Возврат;
	КонецЕсли;
	
	ОписаниеОповощения 	= Новый ОписаниеОповещения("ИзменитьЦеныНаПроцентЗавершение", ЭтаФорма);
	ТекстПодсказки		= НСтр("ru = 'Укажите процент изменения'");
	Процент				= Неопределено;
	ПоказатьВводЧисла(ОписаниеОповощения, Процент, ТекстПодсказки, 6, 2);
	
КонецПроцедуры

// Команда Округлить (страница Товары, подменю Действия с ценами);
//  Открывает форму округления цен ФормаОкругленияЦен для выбора параметров округления цен в табличной части Товары. 
//
&НаКлиенте
Процедура ОкруглитьЦены(Команда)
	
	Если Не Объект.Товары.Количество() Тогда
		Возврат;
	КонецЕсли;
	
	ОписаниеОповещения 	= Новый ОписаниеОповещения("ОкруглитьЦеныЗавершение", ЭтаФорма);
	ОткрытьФорму("Документ.УстановкаЦенТоваров.Форма.ФормаОкругленияЦен",,,,,, ОписаниеОповещения);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Завершение выполнения обработчика команды Изменить на процент. 
//
&НаКлиенте
Процедура ИзменитьЦеныНаПроцентЗавершение(УказанноеЧисло, ДополнительныеПараметры) Экспорт
 
	Если УказанноеЧисло = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	// Изменение цен в табличной части Товары на указанный процент.
	Для Каждого СтрокаТоваров Из Объект.Товары Цикл
		ТекущаяЦена 		= СтрокаТоваров.Цена;
		НоваяЦена 			= ТекущаяЦена + (ТекущаяЦена * УказанноеЧисло * 0.01);
		СтрокаТоваров.Цена 	= НоваяЦена;
	КонецЦикла;
	
	Модифицированность = Истина;
	
КонецПроцедуры 

// Завершение выполнения обработчика команды Округлить. 
//
&НаКлиенте
Процедура ОкруглитьЦеныЗавершение(ПараметрыОкругления, ДополнительныеПараметры) Экспорт
 
	Если ПараметрыОкругления = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Разрядность 		= ПараметрыОкругления.Разрядность;
	ПараметрРазрядности = ПараметрыОкругления.ПараметрРазрядности;
	Режим 				= ПараметрыОкругления.Режим;
		
	Для Каждого СтрокаТоваров Из Объект.Товары Цикл
		ТекущаяЦена = СтрокаТоваров.Цена;		
		Если Разрядность < 0 Тогда
			// Обработка параметра разрядности, если округляется целая часть числа.
			ДлинаЦелойЧасти = Число(СтрДлина(Формат(Окр(ТекущаяЦена), "ЧГ=")));
			Если ДлинаЦелойЧасти - 1 >= - Разрядность Тогда
				// Округление до указанной разрядности, если число может быть округлено. 
				ОкругленнаяЦена = Окр(ТекущаяЦена, Разрядность, Режим);		
			Иначе
				Если ПараметрРазрядности = 0 Тогда
					// Округление до ближайшего разряда, если число не может быть округлено
					// и указан параметр разрядности Округлить до ближайшего разряда.
					ОкругленнаяЦена = Окр(ТекущаяЦена, 1 - ДлинаЦелойЧасти, Режим);	
				ИначеЕсли ПараметрРазрядности = 1 Тогда
					// Округление до целого числа, если число не может быть округлено
					// и указан параметр разрядности Округлить до целого.
					ОкругленнаяЦена = Окр(ТекущаяЦена, 0, Режим);	
				Иначе
					// Пропуск округления числа, если число не может быть округлено
					// и указан параметр разрядности Не округлять.
					Продолжить;
				КонецЕсли
			КонецЕсли;			
		Иначе
			ОкругленнаяЦена = Окр(ТекущаяЦена, Разрядность, Режим);
		КонецЕсли;
		СтрокаТоваров.Цена = ОкругленнаяЦена;
	КонецЦикла;
	
	Модифицированность = Истина;
	
КонецПроцедуры

// Обрабатывает результат подбора товаров на стороне клиента.
//
// Параметры:
//  АдресВременногоХранилища - Строка - адрес таблицы значений с подобранными товарами. 
//
&НаКлиенте
Процедура ОбработатьПодборТоваров(АдресВременногоХранилища) Экспорт
	
	ОбработатьПодборТоваровНаСервере(АдресВременногоХранилища);
	Модифицированность = Истина;		
	
КонецПроцедуры

// Обрабатывает результат подбора товаров на стороне сервера.
//
// Параметры:
//  АдресВременногоХранилища - Строка - адрес таблицы значений с подобранными товарами. 
//
&НаСервере
Процедура ОбработатьПодборТоваровНаСервере(АдресВременногоХранилища)
	
	СписокВыбранныхТоваров = ПолучитьИзВременногоХранилища(АдресВременногоХранилища);	
	Для Каждого СтрокаСписка Из СписокВыбранныхТоваров Цикл
		НоваяСтрока = Объект.Товары.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаСписка);		
	КонецЦикла;
		
КонецПроцедуры

#КонецОбласти
