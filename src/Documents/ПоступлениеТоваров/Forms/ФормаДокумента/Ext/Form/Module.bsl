
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// © Гриценко Даниил 2021-2023г. | Модуль формы
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

#Область ОбработчикиСобытийФормы

// Обработчик события При чтении на сервере.
//
&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	ФормыКлиентСервер.УстановитьОбщиеДанныеИОформлениеДокумента(ЭтаФорма, ДополнительныеПараметры);
	
КонецПроцедуры

// Обработчик события При создании на сервере.
//
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Объект.Ссылка.Пустая() Тогда
		// Установка общих данных и оформления на форме документа при создании нового документа,
		// последующая установка выполняется при чтенении на сервере и после записи на сервере.
		ФормыКлиентСервер.УстановитьОбщиеДанныеИОформлениеДокумента(ЭтаФорма, ДополнительныеПараметры);
		
		// Заполнение реквизитов из настроек пользователя.
	    ОбъектыСервер.УстановитьОсновнойСклад(Объект.Склад);
		ОбъектыСервер.УстановитьВидЦеныОперации(ЭтаФорма);
	КонецЕсли;
	
КонецПроцедуры

// Обработчик события После записи на сервере.
//
&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)

	ФормыКлиентСервер.УстановитьОбщиеДанныеИОформлениеДокумента(ЭтаФорма, ДополнительныеПараметры);	
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

// Обработчик события Дата при изменении.
//
&НаКлиенте
Процедура ДатаПриИзменении(Элемент)
	
	ЦенообразованиеКлиент.ПоказатьВопросПриНеобходимостиПерезаполнитьЦены(ЭтаФорма);
	
КонецПроцедуры

// Обработчик события Вид цены при изменении.
//
&НаКлиенте
Процедура ВидЦеныПриИзменении(Элемент)
	
	ФормыКлиентСервер.УстановитьВидимостьВалюты(ЭтаФорма);
	ЦенообразованиеКлиент.ПоказатьВопросПриНеобходимостиПерезаполнитьЦены(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ТоварыПриИзменении(Элемент)
	
	Объект.СуммаДокумента = Объект.Товары.Итог("Сумма");
	
КонецПроцедуры

// Обработчик события Комментарий при изменении.
//
&НаКлиенте
Процедура КомментарийПриИзменении(Элемент)
	
	ФормыКлиентСервер.УстановитьКартинкуСтраницыКомментария(ЭтаФорма);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыТовары

// Обработчик события Товары товар при изменении.
//
&НаКлиенте
Процедура ТоварыТоварПриИзменении(Элемент)
	
	ТабличныеЧастиКлиентСервер.УстановитьЦенуТовараВСтрокеТоваров(ЭтаФорма); 	
	
КонецПроцедуры

// Обработчик события Товары цена при изменении.
//
&НаКлиенте
Процедура ТоварыЦенаПриИзменении(Элемент)
	
	ТабличныеЧастиКлиентСервер.РассчитатьСуммуВСтрокеТоваров(Элементы.Товары.ТекущиеДанные);	
	
КонецПроцедуры

// Обработчик события Товары количество при изменении.
//
&НаКлиенте
Процедура ТоварыКоличествоПриИзменении(Элемент)
	
	ТабличныеЧастиКлиентСервер.РассчитатьСуммуВСтрокеТоваров(Элементы.Товары.ТекущиеДанные);	
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

// Команда Установить себя автором;
//  Устанавливает текущего пользователя автором документа.
//
&НаКлиенте
Процедура УстановитьСебяАвтором(Команда)
	
	ФормыКлиент.УстановитьСебяАвторомДокумента(ЭтаФорма);
	
КонецПроцедуры

// Команда Подобрать товары (страница Товары);
//  Открывает форму подбора товаров в табличную часть Товары.
//
&НаКлиенте
Процедура ПодобратьТовары(Команда)
		
	ПараметрыФормы = Новый Структура();
	ПараметрыФормы.Вставить("РежимФормы", 	3);
	ПараметрыФормы.Вставить("Период", 		Объект.Дата);
	ПараметрыФормы.Вставить("ВидЦены", 		Объект.ВидЦены);
	ПараметрыФормы.Вставить("Склад1", 		Объект.Склад);

	ОткрытьФорму("Обработка.ПодборТоваров.Форма.Форма", ПараметрыФормы, ЭтаФорма);
		
КонецПроцедуры

// Команда Перезаполнить цены (страница Товары);
//  Перезаполняет цены в табличной части Товары по виду цен из документа. 
//
&НаКлиенте
Процедура ПерезаполнитьЦены(Команда)
	
	ПерезаполнитьЦеныНаСервере();	
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область Ценнобразование

// Завершение выполнения обработчика ПоказатьВопросПриНеобходимостиПерезаполнитьЦены. 
//
&НаКлиенте
Процедура ПоказатьВопросПриНеобходимостиПерезаполнитьЦеныПослеОтвета(РезультатВопроса, ДополнительныеПараметры) Экспорт

	Если РезультатВопроса = КодВозвратаДиалога.Да Тогда
		ПерезаполнитьЦеныНаСервере();		
	КонецЕсли;
	
КонецПроцедуры

// Обрабатывает перезаполнение цен товаров на стороне сервера.
//
&НаСервере
Процедура ПерезаполнитьЦеныНаСервере()
	
	ЦенообразованиеСервер.ПересчитатьДанныеДокументИзФормы(ЭтаФорма);	
	
КонецПроцедуры

#КонецОбласти

#Область ПодборТоваров

// Обрабатывает результат подбора товаров на стороне клиента.
//
// Параметры:
//  АдресВременногоХранилища - Строка - адрес таблицы значений с подобранными товарами. 
//
&НаКлиенте
Процедура ОбработатьПодборТоваров(АдресВременногоХранилища) Экспорт
	
	ОбработатьПодборТоваровНаСервере(АдресВременногоХранилища);
	Модифицированность = Истина;		
	
КонецПроцедуры

// Обрабатывает результат подбора товаров на стороне сервера.
//
// Параметры:
//  АдресВременногоХранилища - Строка - адрес таблицы значений с подобранными товарами. 
//
&НаСервере
Процедура ОбработатьПодборТоваровНаСервере(АдресВременногоХранилища)
	
	СписокВыбранныхТоваров = ПолучитьИзВременногоХранилища(АдресВременногоХранилища);	
	Для Каждого СтрокаСписка Из СписокВыбранныхТоваров Цикл
		НоваяСтрока = Объект.Товары.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаСписка);		
	КонецЦикла;

	Объект.СуммаДокумента = Объект.Товары.Итог("Сумма");
	
КонецПроцедуры

#КонецОбласти

// Инициализирует значение реквизита формы ДополнительныеПараметры;
//  для установки общих данных и оформления формы документа.
//
&НаСервере
Процедура ИнициализироватьДополнительныеПараметры()
	
	ИменаЭлементовИсключений = Новый Массив;
	ИменаЭлементовИсключений.Добавить("СуммаДокумента");
	
	ДополнительныеПараметры = Новый Структура("ИменаЭлементовИсключений", ИменаЭлементовИсключений);	
	
КонецПроцедуры

#КонецОбласти

#Область Инициализация

ИнициализироватьДополнительныеПараметры();

#КонецОбласти