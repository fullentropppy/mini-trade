
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// © Гриценко Даниил 2021-2023г. | Общий модуль ЦенообразованиеСервер
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

#Область ПрограммныйИнтерфейс

// Пересчитывает цены товаров документа в табличной части Товары;
//  и в реквизитах, относящихся к этой табличной части.
//
// Параметры:
//  ФормаДокумента - ФормаКлиентскогоПриложения - форма обрабатываемого документа.
//
Процедура ПересчитатьЦеныТоваровДокументаИзФормы(ФормаДокумента) Экспорт
		
	ДокументОбъект = ФормаДокумента.РеквизитФормыВЗначение("Объект");
	ПересчитатьЦеныТоваровДокумента(ДокументОбъект);
	ФормаДокумента.ЗначениеВРеквизитФормы(ДокументОбъект, "Объект");
	
КонецПроцедуры

// Пересчитывает цены товаров документа в табличной части Товары;
//  и в реквизитах, относящихся к этой табличной части.
//
// Параметры:
//  Документ - ДокументОбъект - обрабатываемый документ.
//
Процедура ПересчитатьЦеныТоваровДокумента(Документ) Экспорт
	
	Товары = Документ.Товары;
	
	Если Не Товары.Количество() Тогда
		Документ.СуммаДокумента = 0;
		Возврат;
	КонецЕсли;
			
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	Товары.Товар КАК Товар,
		|	Товары.Цена КАК Цена,
		|	Товары.Количество КАК Количество,
		|	Товары.Сумма КАК Сумма
		|ПОМЕСТИТЬ втТовары
		|ИЗ
		|	&Товары КАК Товары
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	втТовары.Товар КАК Товар,
		|	ЕСТЬNULL(ЦеныТоваровСрезПоследних.Цена, 0) КАК Цена,
		|	втТовары.Количество КАК Количество,
		|	ЕСТЬNULL(ЦеныТоваровСрезПоследних.Цена, 0) * втТовары.Количество КАК Сумма
		|ИЗ
		|	втТовары КАК втТовары
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЦеныТоваров.СрезПоследних(&Период, ВидЦены = &ВидЦены) КАК ЦеныТоваровСрезПоследних
		|		ПО втТовары.Товар = ЦеныТоваровСрезПоследних.Товар";
	
	Запрос.УстановитьПараметр("Товары", 	Товары.Выгрузить());
	Запрос.УстановитьПараметр("Период", 	Документ.Дата);
	Запрос.УстановитьПараметр("ВидЦены", 	Документ.ВидЦены);
	
	ПересчитанныеТовары = Запрос.Выполнить().Выгрузить();
	Товары.Загрузить(ПересчитанныеТовары);
	
	Документ.СуммаДокумента = Товары.Итог("Сумма");
	
КонецПроцедуры

// Возвращает цену товара по виду цены на дату.
//
// Параметры:
//  Товар	 - СправочникСсылка.Товары	- товар, цену которого необходимо получить;
//  ВидЦены	 - СправочникСсылка.ВидыЦен	- вид получаемой цены товара;
//  Дата	 - Дата 					- дата, на которую необходимо получить цену.
//										  Если не указана, будет выбрана текущая дата. 
// 
// Возвращаемое значение:
//   - Число 
//
Функция ЦенаТовараНаДату(Товар, ВидЦены, Дата = Неопределено) Экспорт
	
	ТекущаяДата = ?(Дата = Неопределено, ТекущаяДата(), Дата);
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ЦеныТоваровСрезПоследних.Цена КАК Цена
		|ИЗ
		|	РегистрСведений.ЦеныТоваров.СрезПоследних(
		|			&Период,
		|			Товар = &Товар
		|				И ВидЦены = &ВидЦены) КАК ЦеныТоваровСрезПоследних";
	
	Запрос.УстановитьПараметр("Период", 	ТекущаяДата);
	Запрос.УстановитьПараметр("Товар", 		Товар);
	Запрос.УстановитьПараметр("ВидЦены", 	ВидЦены);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Цена	= ?(Выборка.Следующий(), Выборка.Цена, 0);
	
	Возврат Цена;
		
КонецФункции

#КонецОбласти
