
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// © Гриценко Даниил 2021-2023г. | Модуль формы
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

#Область ОбработчикиСобытийФормы

// Обработчик события При создании на сервере.
//
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ЗаполнитьСписокРегламентныхЗаданийНаСервере();
	
	// Заполнение параметров отбора на странице Фоновые задания.
	ТекущаяДата									= ТекущаяДата();
	ФоновыеЗаданияОтборПоНачалуПериода 			= НачалоДня(ТекущаяДата);
	ФоновыеЗаданияОтборПоОкончаниюПериода		= КонецДня(ТекущаяДата);
	ФоновыеЗаданияОтборПоАктивным				= Истина;
	ФоновыеЗаданияОтборПоЗавершенным			= Истина;
	ФоновыеЗаданияОтборПоЗавершеннымАварийно	= Истина;
	ФоновыеЗаданияОтборПоОтмененным				= Истина;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

// Обработчик события Страницы при смене страницы.
//
&НаКлиенте
Процедура СтраницыПриСменеСтраницы(Элемент, ТекущаяСтраница)
	
	Если ТекущаяСтраница = Элементы.СтраницаФоновыхЗаданий 
	 И Не СписокФоновыхЗаданий.Количество() Тогда
	 	// Автоматическое обновление списка фоновых заданий,
		// если страница Фоновые задания открывается первый раз.
		ЗаполнитьСписокФоновыхЗаданийНаСервере();
	КонецЕсли;
	
КонецПроцедуры

// Обработчик события Фоновые задания отбор при изменении.
//
&НаКлиенте
Процедура ФоновыеЗаданияОтборПриИзменении(Элемент)
	
	ОтобразитьНеобходимостьОбновленияСпискаФоновыхЗаданий();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыСписокРегламентныхЗаданий

// Обработчик события Список регламентных заданий выбор.
//
&НаКлиенте
Процедура СписокРегламентныхЗаданийВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)

	ОткрытьФормуРегламентногоЗадания();
	
КонецПроцедуры

// Обработчик события Список регламентных заданий при активизации строки.
//
&НаКлиенте
Процедура СписокРегламентныхЗаданийПриАктивизацииСтроки(Элемент)
	
	ТекущиеДанные 		= Элементы.СписокРегламентныхЗаданий.ТекущиеДанные;
	ЗначениеДоступности = Не ТекущиеДанные = Неопределено;
	
	// Командная панель.
	ЭлементыКоманднойПанели = Элементы.СписокРегламентныхЗаданий.КоманднаяПанель.ПодчиненныеЭлементы;
	КнопкиКоманднойПанели 	= ЭлементыКоманднойПанели.КомандыВыделенногоРегламентногоЗадания.ПодчиненныеЭлементы;
	КнопкиПодменюВыполнить 	= КнопкиКоманднойПанели.ВыполнитьРегламентноеЗадание.ПодчиненныеЭлементы;
	
	КнопкиПодменюВыполнить.СписокРегламентныхЗаданийВыполнитьРегламентноеЗаданиеВФоновомРежиме.Доступность 	= ЗначениеДоступности;
	КнопкиПодменюВыполнить.СписокРегламентныхЗаданийВыполнитьРегламентноеЗаданиеВТекущемСенасе.Доступность 	= ЗначениеДоступности;
	КнопкиКоманднойПанели.СписокРегламентныхЗаданийОткрытьРегламентноеЗадание.Доступность 					= ЗначениеДоступности;
	
	// Контекстное меню.
	ЭлементыКонтекстногоМеню 		= Элементы.СписокРегламентныхЗаданий.КонтекстноеМеню.ПодчиненныеЭлементы;
	КнопкиКонтекстногоМеню			= ЭлементыКонтекстногоМеню.СписокРегламентныхЗаданийКомандыРегламентногоЗадания.ПодчиненныеЭлементы;
	КнопкиКонтекстноеМенюВыполнить	= КнопкиКонтекстногоМеню.СписокРегламентныхЗаданийКонтекстноеМенюПодменюВыполнить.ПодчиненныеЭлементы;
		
	КнопкиКонтекстногоМеню.СписокРегламентныхЗаданийКонтекстноеМенюОткрытьРегламентноеЗадание.Доступность 							= ЗначениеДоступности;
	КнопкиКонтекстноеМенюВыполнить.СписокРегламентныхЗаданийКонтекстноеМенюВыполнитьРегламентноеЗаданиеВФоновомРежиме.Доступность 	= ЗначениеДоступности;
	КнопкиКонтекстноеМенюВыполнить.СписокРегламентныхЗаданийКонтекстноеМенюВыполнитьРегламентноеЗаданиеВТекущемСенасе.Доступность	= ЗначениеДоступности;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыСписокФоновыхЗаданий

// Обработчик события Список фоновых заданий выбор.
//
&НаКлиенте
Процедура СписокФоновыхЗаданийВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	ОткрытьФормуФоновогоЗадания();
		
КонецПроцедуры

// Обработчик события Список фоновых заданий при активизации строки.
//
&НаКлиенте
Процедура СписокФоновыхЗаданийПриАктивизацииСтроки(Элемент)
	
	ТекущиеДанные 		= Элементы.СписокФоновыхЗаданий.ТекущиеДанные;
	ЗначениеДоступности = Не ТекущиеДанные = Неопределено;
	
	// Командная панель.
	ЭлементыКоманднойПанели = Элементы.СписокФоновыхЗаданий.КоманднаяПанель.ПодчиненныеЭлементы;
	КнопкиКоманднойПанели 	= ЭлементыКоманднойПанели.КомандыВыделенногоФоновогоЗадания.ПодчиненныеЭлементы;
	
	КнопкиКоманднойПанели.СписокФоновыхЗаданийОткрытьФоновоеЗадание.Доступность 			= ЗначениеДоступности;
	КнопкиКоманднойПанели.СписокФоновыхЗаданийОтменитьВыполнениеФоновогоЗадания.Доступность = ЗначениеДоступности;
	
	// Контекстное меню.
	ЭлементыКонтекстногоМеню 	= Элементы.СписокФоновыхЗаданий.КонтекстноеМеню.ПодчиненныеЭлементы;
	КнопкиКонтекстногоМеню		= ЭлементыКонтекстногоМеню.СписокФоновыхЗаданийКомандыФоновогоЗадания.ПодчиненныеЭлементы;
	
	КнопкиКонтекстногоМеню.СписокФоновыхЗаданийКонтекстноеМенюОткрытьФоновоеЗадание.Доступность 	= ЗначениеДоступности;	
	КнопкиКонтекстногоМеню.СписокФоновыхЗаданийКонтекстноеМенюОтменитьФоновоеЗадание.Доступность 	= ЗначениеДоступности;	
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

// Команда Открыть (страница Регламентные задания);
//  Открывает форму с деталями выбранного регламентного задания.
//
&НаКлиенте
Процедура ОткрытьРегламентноеЗадание(Команда)
	
	ОткрытьФормуРегламентногоЗадания();	
	ОтобразитьНеобходимостьОбновленияСпискаРегламентныхЗаданий();
	
КонецПроцедуры

// Команды подменю Выполнить (страница Регламентные задания);
//  Запускает выполненние выбранного регламентного задания в выбранном режиме.
//
&НаКлиенте
Процедура ВыполнитьРегламентноеЗадание(Команда)
	
	ТекущиеДанные = Элементы.СписокРегламентныхЗаданий.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		ТекстПредупреждения = НСтр("ru = 'Выберите регламентное задание для выполнения'");
		ПоказатьПредупреждение(, ТекстПредупреждения);
		Возврат;
	КонецЕсли;
		
	Текст = НСтр("ru = 'Запущена процедура регламентного задания'");
	ПоказатьОповещениеПользователя(Текст,, ТекущиеДанные.Наименование, БиблиотекаКартинок.СформироватьОтчет);
	
	ВыполнитьВФоновомРежиме = Команда.Имя = "ВыполнитьРегламентноеЗаданиеВФоновомРежиме"; 
	ВыполнитьРегламентноеЗаданиеНаСервере(ТекущиеДанные.Идентификатор, ВыполнитьВФоновомРежиме);	
	
	ОтобразитьНеобходимостьОбновленияСпискаРегламентныхЗаданий();
	
КонецПроцедуры

// Команда Обновить (страница Регламентные задания);
//  Обновляет список регламентных заданий.
//
&НаКлиенте
Процедура ОбновитьСписокРегламентныхЗаданий(Команда)
	
	ЗаполнитьСписокРегламентныхЗаданийНаСервере();
	
	// Сброс пометки звездочкой команды Обновить (страница Регламентные задания).
	КомандыСпискаРегламентныхЗаданий = Элементы.СписокРегламентныхЗаданий.КоманднаяПанель.ПодчиненныеЭлементы;
	КомандыСпискаРегламентныхЗаданий.СписокРегламентныхЗаданийОбновитьСписокРегламентныхЗаданий.Заголовок = НСтр("ru = 'Обновить'");

КонецПроцедуры

// Команда Открыть (страница Фоновые задания);
//  Открывает форму с деталями выбранного фонового задания.
//
&НаКлиенте
Процедура ОткрытьФоновоеЗадание(Команда)
	
	ОткрытьФормуФоновогоЗадания();
	
КонецПроцедуры

// Команда Отменить (страница Фоновые задания);
//  Отменяет выполнение выбранного фонового задания.
//
&НаКлиенте
Процедура ОтменитьВыполнениеФоновогоЗадания(Команда)
	
	ТекущиеДанные = Элементы.СписокФоновыхЗаданий.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		ТекстПредупреждения = НСтр("ru = 'Выберите фоновое задание для отмены выполнения'");
		ПоказатьПредупреждение(, ТекстПредупреждения);					
	Иначе
		ОтменитьВыполнениеФоновогоЗаданиеНаСервере(ТекущиеДанные.Идентификатор);
		ОтобразитьНеобходимостьОбновленияСпискаФоновыхЗаданий();
		Текст = НСтр("ru = 'Отменено выполнение процедуры фонового задания'");
		ПоказатьОповещениеПользователя(Текст,, ТекущиеДанные.Наименование, БиблиотекаКартинок.Удалить);
	КонецЕсли;	
	
КонецПроцедуры

// Команда Обновить (страница Фоновые задания);
//  Обновляет список фоновых заданий.
//
&НаКлиенте
Процедура ОбновитьСписокФоновыхЗаданий(Команда)

	ЗаполнитьСписокФоновыхЗаданийНаСервере();
	
	// Сброс пометки звездочкой команды Обновить (страница Фоновые задания).
	КомандыСпискаФоновыхЗаданий = Элементы.СписокФоновыхЗаданий.КоманднаяПанель.ПодчиненныеЭлементы;
	КомандыСпискаФоновыхЗаданий.СписокФоновыхЗаданийОбновитьСписокФоновыхЗаданий.Заголовок = НСтр("ru = 'Обновить'");
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Открывает форму РегламентноеЗадание с деталями регламентного задания, выбранного в СписокРегламентныхЗаданий.
//
&НаКлиенте
Процедура ОткрытьФормуРегламентногоЗадания()
	
	ТекущиеДанные = Элементы.СписокРегламентныхЗаданий.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		ТекстПредупреждения = НСтр("ru = 'Выберите регламентное задание для просмотра'");
		ПоказатьПредупреждение(, ТекстПредупреждения);
	Иначе
		ПараметрыФормы = Новый Структура("Идентификатор", ТекущиеДанные.Идентификатор);
		ОткрытьФорму("Обработка.РегламентныеИФоновыеЗадания.Форма.РегламентноеЗадание", ПараметрыФормы);
		ОтобразитьНеобходимостьОбновленияСпискаРегламентныхЗаданий();
	КонецЕсли;
		
КонецПроцедуры

// Открывает форму ФоновоеЗадание с деталями фонового задания, выбранного в СписокФоновыхЗаданий.
//
&НаКлиенте
Процедура ОткрытьФормуФоновогоЗадания()
	
	ТекущиеДанные = Элементы.СписокФоновыхЗаданий.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		ТекстПредупреждения = НСтр("ru = 'Выберите фоновое задание для просмотра'");
		ПоказатьПредупреждение(, ТекстПредупреждения);
	Иначе
		ПараметрыФормы = Новый Структура("Идентификатор", ТекущиеДанные.Идентификатор);
		ОткрытьФорму("Обработка.РегламентныеИФоновыеЗадания.Форма.ФоновоеЗадание", ПараметрыФормы,);	
	КонецЕсли;
			
КонецПроцедуры

// Помечает звездочкой команду Обновить (страница Регламентные задания).
//
&НаКлиенте
Процедура ОтобразитьНеобходимостьОбновленияСпискаРегламентныхЗаданий()
	
	КомандыСпискаРегламентныхЗаданий = Элементы.СписокРегламентныхЗаданий.КоманднаяПанель.ПодчиненныеЭлементы;
	КомандыСпискаРегламентныхЗаданий.СписокРегламентныхЗаданийОбновитьСписокРегламентныхЗаданий.Заголовок = НСтр("ru = 'Обновить*'");
		
КонецПроцедуры

// Помечает звездочкой команду Обновить (страница Фоновые задания).
//
&НаКлиенте
Процедура ОтобразитьНеобходимостьОбновленияСпискаФоновыхЗаданий()
	
	КомандыСпискаФоновыхЗаданий = Элементы.СписокФоновыхЗаданий.КоманднаяПанель.ПодчиненныеЭлементы;
	КомандыСпискаФоновыхЗаданий.СписокФоновыхЗаданийОбновитьСписокФоновыхЗаданий.Заголовок = НСтр("ru = 'Обновить*'");
		
КонецПроцедуры

// Заполняет список СписокРегламентныхЗаданий.
//
&НаСервере
Процедура ЗаполнитьСписокРегламентныхЗаданийНаСервере()
	
	СписокРегламентныхЗаданий.Очистить();
	
	// Очистка списка выбора регламентного задания на странице Фоновые задания, перед его заполнением.
	РегламентноеЗаданиеСписокВыбора = Элементы.ФоновыеЗаданияОтборПоРегламентномуЗаданию.СписокВыбора;
	РегламентноеЗаданиеСписокВыбора.Очистить();
	
	МассивРегламентныхЗаданий = РегламентныеЗадания.ПолучитьРегламентныеЗадания();	
	Для Каждого РегламентноеЗадание Из МассивРегламентныхЗаданий Цикл	
		Наименование 	= РегламентноеЗадание.Метаданные.Наименование;
		Представление 	= ?(ПустаяСтрока(Наименование), РегламентноеЗадание.Метаданные.Имя, Наименование);
		Включено		= РегламентноеЗадание.Использование;
			
		ПоследнееЗадание = РегламентноеЗадание.ПоследнееЗадание;
		Если ПоследнееЗадание = Неопределено Тогда
			ТекущееСостояние 		= Неопределено;
			КонецПоследнегоЗадания	= Неопределено;			
		Иначе
			ТекущееСостояние 		= ПоследнееЗадание.Состояние;
			КонецПоследнегоЗадания	= ПоследнееЗадание.Конец;			
		КонецЕсли;
		
		// Определение текущего состояния регламентного задания.
		Если Включено Тогда
			Если ТекущееСостояние = СостояниеФоновогоЗадания.Активно Тогда
				ИндексКартинкиСостояния = 0;
			ИначеЕсли ТекущееСостояние = СостояниеФоновогоЗадания.Завершено Тогда
				ИндексКартинкиСостояния = 1;
			ИначеЕсли ТекущееСостояние = СостояниеФоновогоЗадания.ЗавершеноАварийно Тогда
				ИндексКартинкиСостояния = 2;
			Иначе
				ИндексКартинкиСостояния = 3;	
			КонецЕсли;
		Иначе
			ИндексКартинкиСостояния = 3;
		КонецЕсли;
		
		// Заполние таблицы значений СписокРегламентныхЗаданий.
		НоваяСтрока 							= СписокРегламентныхЗаданий.Добавить();
		НоваяСтрока.Состояние 					= ИндексКартинкиСостояния;
		НоваяСтрока.Наименование 				= Представление;  
		НоваяСтрока.ТекущееСостояние 			= ТекущееСостояние;
		НоваяСтрока.ДатаПоследнегоВыполнения 	= КонецПоследнегоЗадания; 
		НоваяСтрока.Идентификатор				= РегламентноеЗадание.УникальныйИдентификатор;
		
		// Запонение списка выбора регламентного задания на странице Фоновые задания.
		РегламентноеЗаданиеСписокВыбора.Добавить(РегламентноеЗадание.УникальныйИдентификатор, Наименование);					
	КонецЦикла;	
		
КонецПроцедуры

// Заполняет список СписокФоновыхЗаданий.
//
&НаСервере
Процедура ЗаполнитьСписокФоновыхЗаданийНаСервере()
	
	СписокФоновыхЗаданий.Очистить();
	
	// Формирование параметров отбора для получения списка фоновых заданий.
	ПараметрыОтбора = Новый Структура;
	
	// Отбор по дате начала и окончания выполнения.
	Если ЗначениеЗаполнено(ФоновыеЗаданияОтборПоНачалуПериода) Тогда
		ПараметрыОтбора.Вставить("Начало", ФоновыеЗаданияОтборПоНачалуПериода);
	КонецЕсли;
	Если ЗначениеЗаполнено(ФоновыеЗаданияОтборПоОкончаниюПериода) Тогда
		ПараметрыОтбора.Вставить("Конец", ФоновыеЗаданияОтборПоОкончаниюПериода);
	КонецЕсли;
	
	// Отбор по регламентному заданию.
	Если ЗначениеЗаполнено(ФоновыеЗаданияОтборПоРегламентномуЗаданию) Тогда
		Идентификатор		= Новый УникальныйИдентификатор(ФоновыеЗаданияОтборПоРегламентномуЗаданию);
		РегламентноеЗадание = РегламентныеЗадания.НайтиПоУникальномуИдентификатору(Идентификатор);
		ПараметрыОтбора.Вставить("РегламентноеЗадание", РегламентноеЗадание);
	КонецЕсли;

	// Отбор по состояниям.
	Состояния = Новый Массив;
	Если ФоновыеЗаданияОтборПоАктивным Тогда
		Состояния.Добавить(СостояниеФоновогоЗадания.Активно);
	КонецЕсли;
	Если ФоновыеЗаданияОтборПоЗавершенным Тогда
		Состояния.Добавить(СостояниеФоновогоЗадания.Завершено);
	КонецЕсли;
	Если ФоновыеЗаданияОтборПоЗавершеннымАварийно Тогда
		Состояния.Добавить(СостояниеФоновогоЗадания.ЗавершеноАварийно);
	КонецЕсли;
	Если ФоновыеЗаданияОтборПоОтмененным Тогда
		Состояния.Добавить(СостояниеФоновогоЗадания.Отменено);
	КонецЕсли;
	ПараметрыОтбора.Вставить("Состояние", Состояния);
	
	Если Не ПараметрыОтбора.Количество() Тогда
		Возврат;
	КонецЕсли;
	
	// Получение списка фоновых заданий с учетом сформированного отбора.
	МассивФоновыхЗаданий = ФоновыеЗадания.ПолучитьФоновыеЗадания(ПараметрыОтбора);	
	Для Каждого ФоновоеЗадание Из МассивФоновыхЗаданий Цикл
		НоваяСтрока = СписокФоновыхЗаданий.Добавить();
		
		// Получение данных регламентного задания.
		РегламентноеЗадание = ФоновоеЗадание.РегламентноеЗадание;
		Если Не РегламентноеЗадание = Неопределено Тогда
			НаименованиеРегламентногоЗадания 	= РегламентноеЗадание.Метаданные.Наименование;
			ПредставлениеРегламентногоЗадания 	= ?(ПустаяСтрока(НаименованиеРегламентногоЗадания), 
				РегламентноеЗадание.Метаданные.Имя, НаименованиеРегламентногоЗадания);
			НоваяСтрока.РегламентноеЗадание		= ПредставлениеРегламентногоЗадания;
		КонецЕсли;
			
		// Определение текущего состояния фонового задания.
		ТекущееСостояние = ФоновоеЗадание.Состояние;
		Если ТекущееСостояние = СостояниеФоновогоЗадания.Активно Тогда
			ИндексКартинкиСостояния = 0;
		ИначеЕсли ТекущееСостояние = СостояниеФоновогоЗадания.Завершено Тогда
			ИндексКартинкиСостояния = 1;
		ИначеЕсли ТекущееСостояние = СостояниеФоновогоЗадания.ЗавершеноАварийно
		 ИЛИ ТекущееСостояние = СостояниеФоновогоЗадания.Отменено Тогда
			ИндексКартинкиСостояния = 2;
		Иначе
			ИндексКартинкиСостояния = 3;
		КонецЕсли;

		НоваяСтрока.Состояние					= ИндексКартинкиСостояния;
		НоваяСтрока.Наименование 				= ФоновоеЗадание.Наименование;
		НоваяСтрока.ТекущееСостояние 			= ТекущееСостояние;
		НоваяСтрока.ДатаНачалаВыполнения 		= ФоновоеЗадание.Начало;
		НоваяСтрока.ДатаОкончанияВыполнения 	= ФоновоеЗадание.Конец;
		НоваяСтрока.Идентификатор				= ФоновоеЗадание.УникальныйИдентификатор;
	КонецЦикла;
		
КонецПроцедуры

// Запускает выполнение регламентного задания по идентификатору в выбранном режиме.
//
// Параметры:
//  Идентификатор	 - УникальныйИдентификатор	 - идентификатор регламентного задания;
//  ВФоновомРежиме	 - Булево					 - выполнять регламентное задание в фоновом режиме или в текущем сеансе.
//
&НаСервереБезКонтекста
Процедура ВыполнитьРегламентноеЗаданиеНаСервере(Идентификатор, ВФоновомРежиме)
	
	РегламентноеЗадание = РегламентныеЗадания.НайтиПоУникальномуИдентификатору(Идентификатор);	
	Если РегламентноеЗадание = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если ВФоновомРежиме Тогда
		// Запуск регламентного задания в фоновом режиме.
		РегламентноеЗадание.Записать();
		Возврат;
	КонецЕсли;
	
	// Выполнение метода регламентного задания в текущем сеансе.
	ИмяРегламентногоЗадания	= РегламентноеЗадание.Наименование;
	ИмяМетода 				= РегламентноеЗадание.Метаданные.ИмяМетода;
	Параметры 				= РегламентноеЗадание.Параметры;
	РезультатВыполнения 	= ОбщегоНазначенияСервер.ВыполнитьМетодНаСервере(ИмяМетода, Параметры);
		
	Если РезультатВыполнения.Успешно Тогда
		ТекстСообщения = СтрШаблон(НСтр("ru = 'Метод <%1> регламентного задания ""%2"" успешно выполнен'"), 
			ИмяМетода, ИмяРегламентногоЗадания);
	Иначе
		ТекстСообщения = СтрШаблон(НСтр("ru = 'При выполнении метода <%1> регламентного задания ""%2"" произошла ошибка: %3'"),
			ИмяМетода, ИмяРегламентногоЗадания, РезультатВыполнения.ОписаниеОшибки);
	КонецЕсли;
	
	ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);		
		
КонецПроцедуры

// Отменяет выполнение фонового задания по идентификатору.
//
// Параметры:
//  Идентификатор - УникальныйИдентификатор - идентификатор фонового задания. 
//
&НаСервереБезКонтекста
Процедура ОтменитьВыполнениеФоновогоЗаданиеНаСервере(Идентификатор)
	
	ФоновоеЗадание = ФоновыеЗадания.НайтиПоУникальномуИдентификатору(Идентификатор);
	Если Не ФоновоеЗадание = Неопределено Тогда
		ФоновоеЗадание.Отменить();
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти
