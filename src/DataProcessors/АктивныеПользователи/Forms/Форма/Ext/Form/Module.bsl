
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// © Гриценко Даниил 2021-2023г. | Модуль формы
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

#Область ОбработчикиСобытийФормы

// Обработчик события При создании на сервере.
//
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ЗаполнитьСписок();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыСписок

// Обработчик события Список выбор.
//
&НаКлиенте
Процедура СписокВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	ОткрытьКарточкуПользователя();
	
КонецПроцедуры

#КонецОбласти 

#Область ОбработчикиКомандФормы

// Команда Открыть;
//  Открыввает карточку выбранного в списке пользователя.
//
&НаКлиенте
Процедура ОткрытьПользователя(Команда)
	
	ОткрытьКарточкуПользователя();
	
КонецПроцедуры

// Команда Обновить;
//  Обновляет список активных пользователей.
//
&НаКлиенте
Процедура ОбновитьСписок(Команда)
	
	ЗаполнитьСписок();
	
КонецПроцедуры

// Команда Пользователи;
//  Открывает форму списка справочника пользователей.
//
&НаКлиенте
Процедура ОткрытьСправочникПользователей(Команда)
	
	ОткрытьФорму("Справочник.Пользователи.ФормаСписка");
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Открывает карточку пользователя, выбранного в списке.
//
&НаКлиенте
Процедура ОткрытьКарточкуПользователя()
	
	ТекущиеДанные = Элементы.Список.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Пользователь = ТекущиеДанные.Пользователь;
	Если ТипЗнч(Пользователь) = Тип("СправочникСсылка.Пользователи") Тогда
		ПоказатьЗначение(, Пользователь);	
	Иначе
		ТекстПредупреждения = СтрШаблон(НСтр("ru = 'Пользователь ""%1"" отсутствует в справочнике пользователей'"), Пользователь);
		ПоказатьПредупреждение(, ТекстПредупреждения);
	КонецЕсли;
	
КонецПроцедуры

// Обновляет список активных пользователей.
//
&НаСервере
Процедура ЗаполнитьСписок() 
	
	Список.Очистить();
	
	СеансыИБ = ПолучитьСеансыИнформационнойБазы();	
	Для Каждого СеансИБ Из СеансыИБ Цикл
		ПользовательИБ 	= СеансИБ.Пользователь;
		Пользователь 	= ПользователиСервер.ПользовательПоИдентификаторуПользователяИБ(ПользовательИБ.УникальныйИдентификатор);
		Пользователь 	= ?(ЗначениеЗаполнено(Пользователь), Пользователь, ПользовательИБ.Имя);
		
		НоваяСтрока 				= Список.Добавить();
		НоваяСтрока.Состояние		= 1;
		НоваяСтрока.Пользователь	= Пользователь;
		НоваяСтрока.ИмяПриложения 	= ПредставлениеПриложения(СеансИБ.ИмяПриложения);
		ЗаполнитьЗначенияСвойств(НоваяСтрока, СеансИБ,, "Пользователь, ИмяПриложения");
	КонецЦикла;
	
	Список.Сортировать("Пользователь");
	
	КоличествоСеансов = Список.Количество();
	
КонецПроцедуры

#КонецОбласти
