
#Область ПрограммныйИнтерфейс

// Формирует табличный документ из общего макета УниверсальнаяНакладная и заполняет данными накладной.
// В роли накладной может выступать документ Поступление товаров и Продажа товаров.
//
// Параметры:
//  Документ - ДокументСсылка.ПоступлениеТоваров/ПродажаТоваров - ссылка печатаемого документа. 
// 
// Возвращаемое значение:
//   - ТабличныйДокумент
//
&НаСервере
Функция ПечатьУниверсальнаяНакладная(Документ) Экспорт
	
	Макет 				= ПолучитьМакет("УниверсальнаяНакладная");
	ТабличныйДокумент 	= Новый ТабличныйДокумент;
	ТипЗнчНакладной 	= ТипЗнч(Документ);
	
	Если ТипЗнчНакладной = Тип("ДокументСсылка.ПоступлениеТоваров") Тогда
		ИмяНакладной 		= НСтр("ru = 'Документ.ПоступлениеТоваров'");
	    СинонимНакладной 	= НСтр("ru = 'Приходная накладная'");
		ШаблонИнфОбУслуге	= НСтр("ru = 'Покупатель: ""%1""'");
	ИначеЕсли ТипЗнчНакладной = Тип("ДокументСсылка.ПродажаТоваров") Тогда
		ИмяНакладной 		= НСтр("ru = 'Документ.ПродажаТоваров'");
	    СинонимНакладной 	= НСтр("ru = 'Расходная накладная'"); 
		ШаблонИнфОбУслуге	= НСтр("ru = 'Продавец: ""%1""'");
	КонецЕсли;
	
	// Получение данных накладной.
	ТекстЗапроса = 
		"ВЫБРАТЬ
		|	""&СинонимНакладной"" КАК СинонимНакладной,
		|	Накладная.Номер КАК Номер,
		|	Накладная.Дата КАК Дата,
		|	Накладная.Склад КАК Склад,
		|	Накладная.СуммаДокумента КАК СуммаДокумента,
		|	&Автор КАК Автор,
		|	Накладная.Товары.(
		|		НомерСтроки КАК НомерСтроки,
		|		Товар КАК Товар,
		|		Цена КАК Цена,
		|		Количество КАК Количество,
		|		Сумма КАК Сумма
		|	) КАК Товары
		|ИЗ
		|	&Накладная КАК Накладная
		|ГДЕ
		|	Накладная.Ссылка В(&Ссылка)";
		
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&СинонимНакладной", СинонимНакладной);
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&Накладная", ИмяНакладной);
	
	ФИОДляПечати = ПерсональныеНастройкиСервер.ЗначениеФИОДляПечати();
	ФИОДляПечати = ?(ПустаяСтрока(ФИОДляПечати), "Накладная.Автор", СтрШаблон("""%1""", ФИОДляПечати));
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&Автор", ФИОДляПечати);	
	
	Запрос 			= Новый Запрос;
	Запрос.Текст 	= ТекстЗапроса;		
	Запрос.Параметры.Вставить("Ссылка", Документ);
	
	Результат 	= Запрос.Выполнить();
	Выборка		= Результат.Выбрать();

	// Получение областей табличного документа.
	ОбластьЗаголовок 	= Макет.ПолучитьОбласть("Заголовок");
	ОбластьШапка 		= Макет.ПолучитьОбласть("Шапка");
	ОбластьШапкаСклад	= Макет.ПолучитьОбласть("ШапкаСклад");
	ОбластьТоварыШапка 	= Макет.ПолучитьОбласть("ТоварыШапка");
	ОбластьТовары 		= Макет.ПолучитьОбласть("Товары");
	ОбластьПодвал 		= Макет.ПолучитьОбласть("Подвал");

	// Заполнение табличного документа данными накладной.
	Если Выборка.Следующий() Тогда
		// Заголовок.
		ОбластьЗаголовок.Параметры.Заполнить(Выборка);
		ТабличныйДокумент.Вывести(ОбластьЗаголовок);

		// Шапка.
		НаименованиеОрганизации	= Константы.НаименованиеОрганизации.Получить();
		ОбластьШапка.Параметры.ИнфОбУслуге 	= СтрШаблон(ШаблонИнфОбУслуге, НаименованиеОрганизации);
		ТабличныйДокумент.Вывести(ОбластьШапка);

		// Склад в шапке.
		Если ПолучитьФункциональнуюОпцию("ВестиУчетПоСкладам") Тогда
			ОбластьШапкаСклад.Параметры.Заполнить(Выборка);
			ТабличныйДокумент.Вывести(ОбластьШапкаСклад);
		КонецЕсли;
		
		// Товары (ТоварыШапка и Товары).
		ТабличныйДокумент.Вывести(ОбластьТоварыШапка);
		ВыборкаТовары = Выборка.Товары.Выбрать();
		Пока ВыборкаТовары.Следующий() Цикл
			ОбластьТовары.Параметры.Заполнить(ВыборкаТовары);
			ТабличныйДокумент.Вывести(ОбластьТовары, ВыборкаТовары.Уровень());
		КонецЦикла;

		// Подвал.
		ОбластьПодвал.Параметры.Заполнить(Выборка);
		ТабличныйДокумент.Вывести(ОбластьПодвал);
	КонецЕсли;
	
	Возврат ТабличныйДокумент;
	
КонецФункции

#КонецОбласти
